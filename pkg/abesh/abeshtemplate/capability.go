package abeshtemplate

import (
	"text/template"
)

var CapabilityTemplate = template.Must(template.New("capability").Parse(`// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// {{ .Timestamp }}
package {{.PackageName}}

import (
	"context"
	"github.com/mkawserm/abesh/constant"
	"github.com/mkawserm/abesh/iface"
	"github.com/mkawserm/abesh/model"
	"github.com/mkawserm/abesh/registry"
)

type {{.InterfaceName}} struct {
	
}

func (e *{{.InterfaceName}}) Name() string {
	return "{{.ServiceName}}"
}

func (e *{{.InterfaceName}}) Version() string {
	return "0.0.1"
}

func (e *{{.InterfaceName}}) Category() string {
	return string(constant.CategoryService)
}

func (e *{{.InterfaceName}}) ContractId() string {
	return "{{.ContractID}}"
}

func (e *{{.InterfaceName}}) GetConfigMap() iface.ConfigMap {
	panic("implement me")
}

func (e *{{.InterfaceName}}) Setup() error {
	panic("implement me")
}

func (e *{{.InterfaceName}}) SetConfigMap(values iface.ConfigMap) error {
	panic("implement me")
}

func (e *{{.InterfaceName}}) New() iface.ICapability {
	return &{{.InterfaceName}}{}
}

`))
